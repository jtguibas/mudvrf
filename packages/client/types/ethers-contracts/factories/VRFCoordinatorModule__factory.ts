/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  VRFCoordinatorModule,
  VRFCoordinatorModuleInterface,
} from "../VRFCoordinatorModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "resourceSelector",
        type: "string",
      },
    ],
    name: "RequiredModuleNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "getName",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "install",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vrfCoordinatorSystem",
    outputs: [
      {
        internalType: "contract VRFCoordinatorSystem",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class VRFCoordinatorModule__factory {
  static readonly abi = _abi;
  static createInterface(): VRFCoordinatorModuleInterface {
    return new utils.Interface(_abi) as VRFCoordinatorModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VRFCoordinatorModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as VRFCoordinatorModule;
  }
}
